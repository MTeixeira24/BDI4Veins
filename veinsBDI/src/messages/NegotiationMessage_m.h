//
// Generated file, do not edit! Created by nedtool 5.4 from messages/NegotiationMessage.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __NEGOTIATIONMESSAGE_M_H
#define __NEGOTIATIONMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    /** message type for maneuver messages */
    static const int NEGOTIATION_TYPE = 22347;
// }}

/**
 * Class generated from <tt>messages/NegotiationMessage.msg:23</tt> by nedtool.
 * <pre>
 * // General message to initiate negotiation procedures.
 * // Only children of this message should be initialized.
 * packet NegotiationMessage
 * {
 *     // id of the originator of this message
 *     int vehicleId;
 *     // id of the destination of this message
 *     int destinationId;
 *     // sumo external id of the sender
 *     string externalId;
 * }
 * </pre>
 */
class NegotiationMessage : public ::omnetpp::cPacket
{
  protected:
    int vehicleId;
    int destinationId;
    ::omnetpp::opp_string externalId;

  private:
    void copy(const NegotiationMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const NegotiationMessage&);

  public:
    NegotiationMessage(const char *name=nullptr, short kind=0);
    NegotiationMessage(const NegotiationMessage& other);
    virtual ~NegotiationMessage();
    NegotiationMessage& operator=(const NegotiationMessage& other);
    virtual NegotiationMessage *dup() const override {return new NegotiationMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getVehicleId() const;
    virtual void setVehicleId(int vehicleId);
    virtual int getDestinationId() const;
    virtual void setDestinationId(int destinationId);
    virtual const char * getExternalId() const;
    virtual void setExternalId(const char * externalId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const NegotiationMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, NegotiationMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __NEGOTIATIONMESSAGE_M_H

