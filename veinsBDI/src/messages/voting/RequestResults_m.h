//
// Generated file, do not edit! Created by nedtool 5.4 from messages/voting/RequestResults.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __REQUESTRESULTS_M_H
#define __REQUESTRESULTS_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "../NegotiationMessage_m.h"
// }}

/**
 * Class generated from <tt>messages/voting/RequestResults.msg:21</tt> by nedtool.
 * <pre>
 * packet RequestResults extends NegotiationMessage
 * {
 *     string ackType;
 * }
 * </pre>
 */
class RequestResults : public ::NegotiationMessage
{
  protected:
    ::omnetpp::opp_string ackType;

  private:
    void copy(const RequestResults& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const RequestResults&);

  public:
    RequestResults(const char *name=nullptr, short kind=0);
    RequestResults(const RequestResults& other);
    virtual ~RequestResults();
    RequestResults& operator=(const RequestResults& other);
    virtual RequestResults *dup() const override {return new RequestResults(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getAckType() const;
    virtual void setAckType(const char * ackType);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const RequestResults& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, RequestResults& obj) {obj.parsimUnpack(b);}


#endif // ifndef __REQUESTRESULTS_M_H

