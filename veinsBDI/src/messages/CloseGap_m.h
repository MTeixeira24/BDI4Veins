//
// Generated file, do not edit! Created by nedtool 5.4 from messages/CloseGap.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __CLOSEGAP_M_H
#define __CLOSEGAP_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/modules/application/platooning/messages/ManeuverMessage_m.h"
// }}

/**
 * Class generated from <tt>messages/CloseGap.msg:22</tt> by nedtool.
 * <pre>
 * //Notify follower that maneuver is a success and no longer needs to hold the gap
 * packet CloseGap extends ManeuverMessage
 * {
 * }
 * </pre>
 */
class CloseGap : public ::ManeuverMessage
{
  protected:

  private:
    void copy(const CloseGap& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CloseGap&);

  public:
    CloseGap(const char *name=nullptr, short kind=0);
    CloseGap(const CloseGap& other);
    virtual ~CloseGap();
    CloseGap& operator=(const CloseGap& other);
    virtual CloseGap *dup() const override {return new CloseGap(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CloseGap& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CloseGap& obj) {obj.parsimUnpack(b);}


#endif // ifndef __CLOSEGAP_M_H

