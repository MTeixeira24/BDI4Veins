//
// Generated file, do not edit! Created by nedtool 5.4 from messages/MoveToPositionN.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __MOVETOPOSITIONN_M_H
#define __MOVETOPOSITIONN_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/modules/application/platooning/messages/MoveToPosition_m.h"
// }}

/**
 * Class generated from <tt>messages/MoveToPositionN.msg:28</tt> by nedtool.
 * <pre>
 * // Request to move to the Nth position.
 * // Is sent from the leader of the Platoon to an accepted joiner.
 * // Needs a successful JoinResponse to be sent be before.
 * // Contains information about the Platoon and the position to join.
 * // Extends PLEXE MoveToPosition packet to include insertion location
 * //and information about the future lead and rear vehicle of the joiner 
 * packet MoveToPositionN extends MoveToPosition
 * {
 *     int insertionPosition;
 *     int leadVehicleId;
 *     int rearVehicleId;
 * }
 * </pre>
 */
class MoveToPositionN : public ::MoveToPosition
{
  protected:
    int insertionPosition;
    int leadVehicleId;
    int rearVehicleId;

  private:
    void copy(const MoveToPositionN& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MoveToPositionN&);

  public:
    MoveToPositionN(const char *name=nullptr, short kind=0);
    MoveToPositionN(const MoveToPositionN& other);
    virtual ~MoveToPositionN();
    MoveToPositionN& operator=(const MoveToPositionN& other);
    virtual MoveToPositionN *dup() const override {return new MoveToPositionN(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getInsertionPosition() const;
    virtual void setInsertionPosition(int insertionPosition);
    virtual int getLeadVehicleId() const;
    virtual void setLeadVehicleId(int leadVehicleId);
    virtual int getRearVehicleId() const;
    virtual void setRearVehicleId(int rearVehicleId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MoveToPositionN& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MoveToPositionN& obj) {obj.parsimUnpack(b);}


#endif // ifndef __MOVETOPOSITIONN_M_H

