[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
num-rngs = 6

ned-path = .
network = veinsbdi.simulations.simpleLaneMerge.LaneMergeScenario

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

*.playgroundSizeX = 65000m
*.playgroundSizeY = 25000m
*.playgroundSizeZ = 50m

sim-time-limit = 60 s

**.debug = false
**.coreDebug = false

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.*.updateInterval = 0.01s #Double asterix in order to sync update times with TraCI and LightJason Managers. This must also match the timestep in sumo.cfg, see simple Lane Merge
*.manager.host = "localhost"
*.manager.moduleType = "vtypeauto=org.car2x.veins.modules.application.platooning.PlatoonCar vtypemerger=org.car2x.veins.modules.application.platooning.PlatoonCar"
*.manager.moduleName = "vtypeauto=node vtypemerger=nodemerger"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 100mW
*.**.nic.mac1609_4.bitrate = 6Mbps

*.**.nic.phy80211p.sensitivity = -94dBm
*.**.nic.phy80211p.maxTXPower = 100mW
*.**.nic.phy80211p.useThermalNoise = true
*.**.nic.phy80211p.thermalNoise = -95dBm
*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

##########################################################
#                      Mobility                          #
##########################################################
*.node*[*].mobility.x = 0
*.node*[*].mobility.y = 0
*.node*[*].mobility.z = 1.895


##########################################################
#                    Seeds and PRNGs                     #
##########################################################
seed-set = ${repetition}
**.seed = ${repetition}

*.node*[*].unicast.rng-0 = 1
*.node*[*].prot.rng-0 = 2
*.node*[*].appl.rng-0 = 3
*.node*[*].scenario.rng-0 = 4
**.traffic.rng-0 = 5

#launch config. tells Veins which SUMO configuration to run
*.manager.configFile = "./sumocfg/slm.sumo.cfg"

##########################################################
#                   Common parameters                    #
##########################################################

**.numberOfCars = ${nCars = 4}
**.numberOfCarsPerPlatoon = ${platoonSize = 4}
**.numberOfLanes = ${nLanes = 1}

##########################################################
#                    Position helper                     #
##########################################################

*.node*[*].helper_type = "LocalPlatoonPositionHelper"
#*.node*[*].helper_type = "PositionHelper"
#*.node*[*].helper.nLanes = ${nLanes}
#*.node*[*].helper.platoonSize = ${platoonSize}
#*.node*[*].helper.nCars = ${nCars}

##########################################################
#               Scenario common parameters               #
##########################################################

#controller and engine related parameters
*.node*[*].scenario.caccC1 = 0.5
*.node*[*].scenario.caccXi = 1
*.node*[*].scenario.caccOmegaN = 0.2 Hz
*.node*[*].scenario.engineTau = 0.5 s
*.node*[*].scenario.ploegH = ${ploegH = 0.5}s
*.node*[*].scenario.ploegKp = 0.2
*.node*[*].scenario.ploegKd = 0.7
*.node*[*].scenario.useRealisticEngine = false
#via wireless send acceleration computed by the controller, not the actual one
*.node*[*].scenario.useControllerAcceleration = true

#controllers to be tested
**.numericController = ${controller = 0, 0, 1, 2, 3, 4}
*.node*[*].scenario.controller = ${sController = "ACC", "ACC", "CACC", "PLOEG", "CONSENSUS", "FLATBED" ! controller}

#headway for ACCs
**.headway = ${headway = 0.3, 1.2, 0.1, 0.1, 0.1, 0.1 ! controller}s
*.node*[*].scenario.accHeadway = ${headway}s
*.node*[*].scenario.leaderHeadway = ${leaderHeadway = 1.2}s

#average leader speed
*.node*[*].scenario.leaderSpeed = ${leaderSpeed = 100}kmph

##########################################################
#                      Application                       #
##########################################################

#*.node*[*].appl_type = "GeneralPlatooningApp"
#enable statistics recording for the application
*.node*[*].appl.*.scalar-recording = true
*.node*[*].appl.*.vector-recording = true
#*.node*[*].appl.joinManeuver = "JoinAtBack"

##########################################################
#                Communication protocols                 #
##########################################################

*.node*[*].protocol_type = "SimplePlatooningBeaconing"
#enable statistics recording for the network layer
*.node*[*].prot.*.scalar-recording = true
*.node*[*].prot.*.vector-recording = true
#set the beaconing interval to be 0.1s
*.node*[*].prot.beaconingInterval = ${beaconInterval = 0.1}s
#access category for platooning beacons
*.node*[*].prot.priority = ${priority = 2}
#packet size for platooning beacon
*.node*[*].prot.packetSize = ${packetSize = 200}
#set to 0 the packet loss rate for the unicast protocol
*.node*[*].unicast.packetLossRate = 0

##########################################################
#                    Traffic manager                     #
##########################################################

**.traffic_type = "veinsbdi.traffic.LaneMergeTrafficManager"
#insert platooning vehicles at time
**.traffic.platoonInsertTime = 1 s
#insert platooning vehicles with a speed of
**.traffic.platoonInsertSpeed = ${leaderSpeed}kmph
#insert nCars platooning vehicles
**.traffic.nCars = ${nCars}
#let platoonSize cars per platoon
**.traffic.platoonSize = ${platoonSize}
#use nLanes lanes
**.traffic.nLanes = ${nLanes}
#SUMO vtype for platooning vehicles
**.traffic.platooningVType = "vtypeauto" #Specified in the .rou.xml file
#insert vehicles already at steady-state. distance depends on controller
**.traffic.platoonInsertDistance = ${2, 2, 5, 2, 15, 5 ! controller}m
**.traffic.platoonInsertHeadway = ${0.3, 1.2, 0, 0.5, 0.8, 0 ! controller}s
**.traffic.platoonLeaderHeadway = ${leaderHeadway}s
#Specify the vehicle type for the merger vehicle
**.traffic.mergerVType = "vtypemerger"


#disable statistics recording for all other modules
**.scalar-recording = false
**.vector-recording = false

[Config SingleLaneMergeNoAI]

*.node*[*].appl_type = "GeneralPlatooningApp"
*.node*[*].appl.joinManeuver = "JoinAtBack"
*.manager.useGui = true
*.node*[*].scenario_type = "veinsbdi.scenarios.LaneMergeScenario"

[Config SingleLaneMergeAI]

*.node[*].appl_type = "veinsbdi.app.plexeappl.example.SimpleMerge"
*.node[*].appl.asl_file = "laneMergeVehicle.asl"
#*.nodemerger[*].appl.asl_file = "laneMergeVehicle.asl"

network = veinsbdi.simulations.simpleLaneMerge.LaneMergeScenarioLJ

*.manager.useGui = true
*.node*[*].scenario_type = "veinsbdi.scenarios.LaneMergeScenario"