[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
num-rngs = 7
repeat = 50
network = MarketPlatoonCruise
ned-path = .

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

*.playgroundSizeX = 65000m
*.playgroundSizeY = 25000m
*.playgroundSizeZ = 50m

sim-time-limit = 15 s

**.debug = false
**.coreDebug = false

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.*.updateInterval = 0.01s #Double asterix in order to sync update times with TraCI and LightJason Managers. This must also match the timestep in sumo.cfg, see simple Lane Merge
*.manager.host = "localhost"
*.manager.moduleType = "vMarket=org.car2x.veins.modules.application.platooning.PlatoonCar vNoise=org.car2x.veins.modules.application.platooning.PlatoonCar"
*.manager.moduleName = "vMarket=node vNoise=noise"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 17

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 32mW
*.**.nic.mac1609_4.bitrate = 6Mbps

*.**.nic.phy80211p.sensitivity = -94dBm
*.**.nic.phy80211p.maxTXPower = 100mW
*.**.nic.phy80211p.useThermalNoise = true
*.**.nic.phy80211p.thermalNoise = -95dBm
*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].mobility.x = 0
*.node[*].mobility.y = 0
*.node[*].mobility.z = 1.895
*.noise[*].mobility.x = 0
*.noise[*].mobility.y = 0
*.noise[*].mobility.z = 1.895

##########################################################
#                    Seeds and PRNGs                     #
##########################################################
seed-set = ${repetition}#${platoonSize}
**.seed = ${repetition}#${platoonSize}

*.node[*].unicast.rng-0 = 1
*.node[*].prot.rng-0 = 2
*.node[*].appl.rng-0 = 3
*.node[*].scenario.rng-0 = 4
*.noise[*].unicast.rng-0 = 1
*.noise[*].prot.rng-0 = 2
*.noise[*].appl.rng-0 = 3
*.noise[*].scenario.rng-0 = 4
**.traffic.rng-0 = 5

#launch config. tells Veins which SUMO configuration to run
*.manager.configFile = "./sumocfg/slm.sumo.cfg"

##########################################################
#                   Common parameters                    #
###############################################	###########

**.numberOfCars = ${nCars = 15}
**.numberOfCarsPerPlatoon = ${platoonSize = 4} #4,5,6,7,8,9,10,11,12,13,14
**.numberOfLanes = ${nLanes = 1}

##########################################################
#                    Position helper                     #
##########################################################

*.node[*].helper_type = "DynamicPositionHelper"
*.noise[*].helper_type = "PositionHelper"
**.helper.nLanes = ${nLanes}
**.helper.platoonSize = ${platoonSize}
**.helper.nCars = ${nCars}

##########################################################
#               Scenario common parameters               #
##########################################################

#controller and engine related parameters
**.scenario.caccC1 = 0.5
**.scenario.caccXi = 1
**.scenario.caccOmegaN = 0.2 Hz
**.scenario.engineTau = 0.5 s
**.scenario.ploegH = 0.5 s
**.scenario.ploegKp = 0.2
**.scenario.ploegKd = 0.7
**.scenario.useRealisticEngine = false
#via wireless send acceleration computed by the controller, not the actual one
**.scenario.useControllerAcceleration = true

#This associates a controller type to each run. Maybe reduce this
#controllers to be tested
**.numericController = 1
*.node[*].scenario.controller = "CACC"
*.noise[*].scenario.controller = "ACC"

#headway for ACCs
*.node[*].scenario.accHeadway = 1s
*.node[*].scenario.leaderHeadway = ${leaderHeadway = 1.2}s
*.node[*].scenario.platooningVType = ${vtype = "vMarket"}
#average leader speed
*.node[*].scenario.leaderSpeed = 100 kmph

##########################################################
#                Communication protocols                 #
##########################################################

*.node[*].protocol_type = "SimplePlatooningBeaconing"
*.noise[*].protocol_type = "InterferingBeaconing"
#enable statistics recording for the network layer
*.node[*].prot.*.scalar-recording = true
*.node[*].prot.*.vector-recording = true
#set the beaconing interval to be 0.1s
**.prot.beaconingInterval = 0.1s
#access category for platooning beacons
**.prot.priority = 2
#packet size for platooning beacon
**.prot.packetSize = 200
#set to 0 the packet loss rate for the unicast protocol
**.unicast.packetLossRate = 0

##########################################################
#                      Application                       #
##########################################################
*.node[*].appl.*.scalar-recording = true
*.node[*].appl.*.vector-recording = true
*.noise[*].appl.*.scalar-recording = false
*.noise[*].appl.*.vector-recording = false
*.node[*].appl_type = "veinsbdi.app.plexeappl.concrete.Market.MarketAgent"
*.noise[*].appl_type = "veinsbdi.app.interferance.InterferanceAppl"
*.node[*].appl.joinManeuver = "JoinAtBackAgent"
*.node[*].scenario_type = "veinsbdi.scenarios.JoinScenario"
*.noise[*].scenario_type = "veinsbdi.scenarios.NoiseVehicleScenario"
*.node[*].appl.targetPlatoon = 0
#Should the joiners start the negotiation? 
*.node[*].appl.engageNegotiations = false
*.node[*].appl.desiredSpeed = uniform(90 kmph, 110 kmph, 6)
*.node[*].appl.asl_file = "marketAgent.asl"

##########################################################
#                    Traffic manager                     #
##########################################################
**.traffic_type = "veinsbdi.traffic.NoisePlatoonTrafficManager"
#SUMO vtype for platooning vehicles
**.traffic.platooningVType = ${vtype}
**.traffic.nCars = ${nCars}
**.traffic.platoonSize = ${platoonSize}
**.traffic.nLanes = ${nLanes}
**.traffic.platoonInsertTime = 1 s
**.traffic.platoonInsertSpeed = 100 kmph #uniform(80 kmph, 120 kmph, 3)
**.traffic.platoonInsertDistance = 5m
**.traffic.platoonInsertHeadway = 0s
**.traffic.platoonLeaderHeadway = ${leaderHeadway} s
**.traffic.joinerLane = 0
**.traffic.noiseVType = "vNoise"
**.traffic.noiseLanes = 3
**.traffic.numJoiners = 1
**.traffic.nPlatoons = 1

##########################################################
#            LightJason Manager parameters               #
##########################################################
*.ljmanager.*.scalar-recording = true
*.ljmanager.platoon_size = ${platoonSize}
*.ljmanager.platoon_type = ${situation = "Unstable"}# "Stable"	
*.ljmanager.iteration = ${repetition}#repetition
*.ljmanager.factor = 0.05
*.ljmanager.utilityFunction = "khan"
*.ljmanager.statisticsCollector = "CMarketStatistics"
*.ljmanager.agentManager = "CMarketAgentManager"


#disable statistics recording for all other modules
**.scalar-recording = false
**.vector-recording = false

[Config BaseCruiseScenario]

*.manager.useGui = false
